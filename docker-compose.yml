version: '3.6'
services:
  main:
    build: 
      context: project/
    container_name: elastic_app
    ports:
      - 127.0.0.1:5001:5000
    volumes: 
      - ./project/:/app/
    depends_on:
      - elasticsearch
    tty: true
    restart: 'on-failure'
    networks:
      - elasticnet
    environment:
      - HOST=elasticsearch
      - FLASK_APP=elastic_app/__init__.py
      - FLASK_DEBUG=1
      - ELASTIC_USERNAME=${ELASTIC_USERNAME}
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}

  elasticsearch:
    build:
      context: elasticsearch/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    container_name: elasticsearch
    hostname: elasticsearch
    ports:
      # all API calls over HTTP
      - '127.0.0.1:9200:9200'

      # communication between nodes in a cluster
      - '127.0.0.1:9300:9300' 
    environment:
      - discovery.type=single-node
      - HOST=elasticsearch
      # override default JVM options
      # Set maximum heap size to 512mb
      # initial memory allocation pool xms
      # maximum memory allocation pool for java virtual machine (xms)
      - ES_JAVA_OPTS=-Xmx512m -Xms512m
      - cluster.name=elasticsearch
      - node.name=es01
      # declaring our es01 node as master
      # - cluster.initial_master_nodes= es01

      # nice-options
      # this will become true
      - cluster.routing.allocation.disk.threshold_enabled=${THRESHOLD_ENABLED}

      # es will not allocate shards to nodes that are having
      # more than 65% disk usage 
      - cluster.routing.allocation.disk.watermark.low=65%

      # es will attempt to relocate shards aways from nodes whose
      # disk usage is more than 70%
      - cluster.routing.allocation.disk.watermark.high=70%

      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}

    volumes:
      - ./elastic/data:/usr/share/elasticsearch/data
      - ./elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    networks:
      - elasticnet

  # kibana:
  #   build:
  #     context: kibana/
  #     args:
  #       ELASTIC_VERSION: ${ELASTIC_VERSION}
  #   container_name: kibana
  #   hostname: kibana
  #   ports:
  #     # kibana backend server port
  #     - '127.0.0.1:5601:5601'

  #     # logstash will use this port
  #     - '127.0.0.1:9600:9600'
  #   environment:
  #     # - SERVERNAME=kibana
  #     # - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
  #     # - ES_JAVA_OPTS=-Xmx512m -Xms512m

  #     # # security
  #     # - ELASTICSEARCH_USERNAME=${ELASTIC_USERNAME}
  #     # - ELASTICSEARCH_PASSWORD=${ELASTIC_PASSWORD}
  #     - KIBANA_SYSTEM_PASSWORD=${ELASTIC_PASSWORD}
  #   networks:
  #     - elasticnet
  #   volumes:
  #     - ./kibana/kibana.yml:/usr/share/kibana/config/kibana.yml
  #   depends_on:
  #     - elasticsearch
volumes:
  logvolume01: {}

networks:
  elasticnet: 
    name: elasticnet
    driver: bridge
  
  